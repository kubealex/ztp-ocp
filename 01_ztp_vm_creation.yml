---
- name: ZTP Setup | Create VM and setup templates
  hosts: vm_host
  tasks:
    - name: ZTP Setup | Pre-config | Set home directory as fact for the user
      ansible.builtin.set_fact:
        ztp_home: "{{ ztp_working_directory | default(ansible_env.HOME, true) }}"

    - name: ZTP Setup | Pre-config | Creating workspace
      ansible.builtin.file:
        state: directory
        path: "{{ ztp_home }}/{{ ztp_cluster_name | default('ztp-sno', true) }}"
        recurse: true

    - name: ZTP Setup | Pre-config | Copy terraform files on host
      ansible.builtin.copy:
        src: "{{ playbook_dir }}/terraform"
        dest: "{{ ztp_home }}/{{ ztp_cluster_name | default('ztp-sno', true) }}"
        mode: 0755

    - name: ZTP Setup | Pre-config | Create ssh keypair
      community.crypto.openssh_keypair:
        path: "{{ playbook_dir }}/id_rsa_ocp_setup"
      delegate_to: localhost

    - name: ZTP Setup | Pre-config | Copy SSH keys in working directory
      ansible.builtin.copy:
        src: "{{ playbook_dir }}/{{ item }}"
        dest: "{{ ztp_home }}/{{ ztp_cluster_name | default('ztp-sno', true) }}/{{ item }}"
        mode: 0755
      loop:
        - id_rsa_ocp_setup
        - id_rsa_ocp_setup.pub

    - name: ZTP Setup | Pre-config | Slurp key to get content
      ansible.builtin.slurp:
        path: "{{ ztp_home }}/{{ ztp_cluster_name | default('ztp-sno', true) }}/id_rsa_ocp_setup.pub"
      register: ztp_key

    - name: ZTP Setup | Provisioning | Configure NetworkManager for local DNS
      ansible.builtin.copy:
        src: files/localdns.conf
        dest: /etc/NetworkManager/conf.d/{{ ztp_cluster_name | default('ztp-sno', true) }}-localdns.conf
        mode: 0755
      become: true

    - name: ZTP Setup | Provisioning | Configure NetworkManager for libvirt network
      ansible.builtin.template:
        src: templates/libvirt_dnsmasq_sno.j2
        dest: "/etc/NetworkManager/dnsmasq.d/{{ ztp_cluster_name | default('ztp-sno', true) }}-libvirt_dnsmasq.conf"
        mode: 0755
      become: true

    - name: ZTP Setup | Provisioning | Use TF project to ensure pool and network are defined
      community.general.terraform:
        project_path: "{{ ztp_home }}/{{ ztp_cluster_name | default('ztp-sno', true) }}/terraform/libvirt-resources"
        variables:
          domain: "{{ ztp_cluster_name | default('ztp-sno', true) }}.{{ ztp_cluster_domain | default('ocpdemo.labs', true) }}"
          network_cidr: ' ["{{ ztp_network_cidr | default("192.168.210.0/24", true) }}"]'
          cluster_name: "{{ ztp_cluster_name | default('ztp', true) }}"
          dns: "{{ ztp_node_ip | default('192.168.210.2') }}"
        force_init: true
        state: present
      become: true

    - name: ZTP Setup | Provisioning | Provision spare node with Terraform
      community.general.terraform:
        project_path: "{{ ztp_home }}/{{ ztp_cluster_name | default('ztp-sno', true) }}/terraform/ztp-sno"
        force_init: true
        variables:
          hostname: "{{ ztp_node_name | default('ztp-sno', true) }}"
          libvirt_network: "{{ ztp_cluster_name | default('ztp', true) }}"
          libvirt_pool: "{{ ztp_cluster_name | default('ztp', true) }}"
          vm_net_ip: "{{ ztp_node_ip | default('192.168.210.2', true) }}"
          cpu: "{{ ztp_node_cpu | default(8, true) }}"
          memory: "{{ ztp_node_memory | default(32, true) }}"
          vm_volume_size: "{{ ztp_node_disk_size | default(100, true) }}"
          vm_mac_address: "{{ ztp_node_mac_address | default('52:54:00' | community.general.random_mac, true) }}"
          local_volume_size: "{{ ztp_node_local_storage_size | default(50, true) }}"
          local_volume_enabled: "{{ ztp_node_local_storage_enabled | default(false, true) }}"
        state: present
      become: true
      register: tf_output

    - name: ZTP Setup | Provisioning | Restart net-services
      ansible.builtin.service:
        name: "{{ item }}"
        state: restarted
      loop:
        - NetworkManager
        - dnsmasq
        - libvirtd
      become: true

    - name: ZTP Setup | Manifests | Use outputs to trigger template
      ansible.builtin.set_fact:
        node_mac: "{{ tf_output.outputs.macs.value | join('') }}"
        node_uuid: "{{ tf_output.outputs.id.value | join('') }}"
        ztp_node_ssh_key: "{{ ztp_key.content | b64decode }}"

    - name: ZTP Setup | Manifests | Create gitops folder
      ansible.builtin.file:
        path: "{{ ztp_home }}/{{ ztp_cluster_name | default('ztp-sno', true) }}/gitops/output"
        state: directory
        recurse: true
        mode: 0755

    - name: ZTP Setup | Manifests | Fire up site config template
      ansible.builtin.template:
        src: ztp-sno.yaml.j2
        dest: "{{ ztp_home }}/{{ ztp_cluster_name | default('ztp-sno', true) }}/gitops/{{ ztp_cluster_name | default('ztp-sno', true) }}.yml"
        mode: 0755

    - name: ZTP Setup | Manifests | Fire up BMC Credentials secret
      ansible.builtin.template:
        src: bmc-credentials.yml.j2
        dest: "{{ ztp_home }}/{{ ztp_cluster_name | default('ztp-sno', true) }}/gitops/{{ ztp_cluster_name | default('ztp-sno', true) }}-bmc-credentials.yml"
        mode: 0755

    - name: ZTP Setup | Manifests | Fire up Pull Secret
      ansible.builtin.template:
        src: pull-secret.yml.j2
        dest: "{{ ztp_home }}/{{ ztp_cluster_name | default('ztp-sno', true) }}/gitops/{{ ztp_cluster_name | default('ztp-sno', true) }}-pull-secret.yml"
        mode: 0755

    - name: ZTP Setup | Manifests | Fire up kustomization
      ansible.builtin.template:
        src: kustomization.yml.j2
        dest: "{{ ztp_home }}/{{ ztp_cluster_name | default('ztp-sno', true) }}/gitops/kustomization.yaml"
        mode: 0755

    - name: ZTP Setup | Manifests | Copy siteconfig utility to remote system
      ansible.builtin.copy:
        src: "{{ item }}"
        dest: "{{ ztp_home }}/{{ ztp_cluster_name | default('ztp-sno', true) }}/"
        mode: 0755
      loop:
        - siteconfig-generator
        - KlusterletAddonConfig.yaml

    - name: ZTP Setup | Manifests | Copy siteconfig utility and Klusterlet patch to remote system
      ansible.builtin.copy:
        src: "KlusterletAddonConfig.yaml"
        dest: "{{ ztp_home }}/{{ ztp_cluster_name | default('ztp-sno', true) }}/gitops"
        mode: 0755

    - name: ZTP Setup | Manifests | Create dummy folder
      ansible.builtin.file:
        path: "{{ ztp_home }}/{{ ztp_cluster_name | default('ztp-sno', true) }}/extra-manifest"
        state: directory
        mode: 0755

    - name: ZTP Setup | Manifests | Generate manifests
      ansible.builtin.shell:
        cmd: ./siteconfig-generator gitops/{{ ztp_cluster_name | default('ztp-sno', true) }}.yml > gitops/output/{{ ztp_cluster_name | default('ztp-sno', true) }}-manifests.yml
        chdir: "{{ ztp_home }}/{{ ztp_cluster_name | default('ztp-sno', true) }}"

    - name: ZTP Setup | Manifests | Compress manifests to fetch them
      community.general.archive:
        path: "{{ ztp_home }}/{{ ztp_cluster_name | default('ztp-sno', true) }}/gitops"
        dest: "{{ ztp_home }}/{{ ztp_cluster_name | default('ztp-sno', true) }}//{{ ztp_cluster_name | default('ztp-sno', true) }}-manifests.tgz"

    - name: ZTP Setup | Manifests | Retrieve manifests
      ansible.builtin.fetch:
        src: "{{ ztp_home }}/{{ ztp_cluster_name | default('ztp-sno', true) }}//{{ ztp_cluster_name | default('ztp-sno', true) }}-manifests.tgz"
        dest: "{{ playbook_dir }}/"
        flat: true
